version: '3.4'

services:
  cardsdb:
    container_name: cardsdb
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

  expensedb:
    container_name: expensedb
    environment:
        SA_PASSWORD: 'SqlServer@2019'
        ACCEPT_EULA: 'Y'
    restart: always
    ports:
        - '1433:1433'

  cards.api:
    container_name: cards.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://cardsdb:27017"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - cardsdb
      - rabbitmq
    ports:
      - "8000:80"

  expense.api:
    container_name: expense.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=expensedb;Database=ExpenseDb;User Id=sa;Password=SqlServer@2019"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - expensedb
        - rabbitmq
    ports:
        - "8001:80"

  expense.aggregator:
    container_name: expense.aggregator
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ApiSettings:CardUrl=http://ocelotapigw/card"
      - "ApiSettings:ExpenseUrl=http://ocelotapigw/expense"
    ports:
      - "5000:80"

  ocelotapigw:
    container_name: ocelotapigw
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
        - cards.api
        - expense.api
    ports:
        - "10000:80"
   
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "8500:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672" 

